{"version":3,"sources":["logo.svg","requesters/Requester.js","App.js","reportWebVitals.js","index.js"],"names":["Requester","a","Axios","get","res","data","console","log","myText","post","requester","App","useState","text0","setText0","text1","setText1","text2","setText2","checkSever","getRequest","postRequest","useEffect","className","src","logo","alt","onClick","onChange","e","target","value","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAe,MAA0B,iC,iECEpBA,E,iIAEjB,4BAAAC,EAAA,+EAE0BC,IAAMC,IAAI,SAFpC,cAEcC,EAFd,yBAGeA,EAAIC,MAHnB,yDAKe,8BALf,yD,qHASA,4BAAAJ,EAAA,+EAE0BC,IAAMC,IAAI,SAFpC,cAEcC,EAFd,yBAGeA,EAAIC,MAHnB,gCAKQC,QAAQC,IAAR,MALR,yD,sHASA,WAAkBC,GAAlB,eAAAP,EAAA,+EAE0BC,IAAMO,KAAN,gBAAoBD,IAF9C,cAEcJ,EAFd,yBAGeA,EAAIC,MAHnB,gCAKQC,QAAQC,IAAR,MALR,yD,sEChBEG,EAAY,IAAIV,EAEP,SAASW,IAAO,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEFF,mBAAS,sBAFP,mBAErBG,EAFqB,KAEdC,EAFc,OAGFJ,mBAAS,IAHP,mBAGrBK,EAHqB,KAGdC,EAHc,iDAS5B,4BAAAjB,EAAA,sEACkBS,EAAUS,aAD5B,OACMf,EADN,OAEEU,EAASV,GAFX,4CAT4B,kEAc5B,4BAAAH,EAAA,sEACkBS,EAAUU,aAD5B,OACMhB,EADN,OAEEY,EAASZ,EAAG,MAFd,4CAd4B,kEAqB5B,4BAAAH,EAAA,sEACkBS,EAAUW,YAAYJ,GADxC,OACMb,EADN,OAEEc,EAASd,GAFX,4CArB4B,sBA8B5B,OAzBAkB,qBAAU,YALkB,mCAM1BH,KACC,IAwBD,sBAAKI,UAAU,MAAf,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAAC,IAAD,IACCb,EACD,cAAC,IAAD,IACA,cAAC,IAAD,CAAQc,QApCgB,2CAoCxB,yBACCZ,EACD,cAAC,IAAD,IACA,cAAC,IAAD,CAAQY,QAvCgB,2CAuCxB,0BACA,cAAC,IAAD,CAAOC,SAdX,SAA2BC,GACzBX,EAASW,EAAEC,OAAOC,QAaqBC,YAAY,iBATnD,iBAUiBf,KCjDrB,IAYegB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e67a388a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Axios from 'axios';\r\n\r\nexport default class Requester {\r\n\r\n    async checkSever() {\r\n        try {\r\n            const res = await Axios.get('/init');\r\n            return res.data;\r\n        } catch (error) {\r\n            return 'Make Sure sever is running'\r\n        }\r\n    }\r\n\r\n    async getRequest() {\r\n        try {\r\n            const res = await Axios.get('/test');\r\n            return res.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async postRequest(myText) {\r\n        try {\r\n            const res = await Axios.post(`/post/${myText}`);\r\n            return res.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n}","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { Divider, Button, Input } from \"antd\";\nimport Requester from \"./requesters/Requester\";\n\nconst requester = new Requester();\n\nexport default function App() {\n  const [text0, setText0] = useState(\"\");\n  const [text1, setText1] = useState(\" : Click to change\");\n  const [text2, setText2] = useState(\"\");\n\n  useEffect(() => {\n    checkSever()\n  }, []);\n\n  async function checkSever() {\n    let res = await requester.checkSever();\n    setText0(res)\n  }\n\n  async function getRequest() {\n    let res = await requester.getRequest();\n    setText1(res[\"test\"]);\n  }\n\n\n\n  async function postRequest() {\n    let res = await requester.postRequest(text2);\n    setText2(res);\n  }\n\n  function handleTextChange (e) {\n    setText2(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <Divider />\n      {text0}\n      <Divider />\n      <Button onClick={getRequest}>GET REQUEST</Button>\n      {text1}\n      <Divider />\n      <Button onClick={postRequest}>POST REQUEST</Button>\n      <Input onChange = {handleTextChange} placeholder=\"POST REQUEST\" />\n      From Server : {text2}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}